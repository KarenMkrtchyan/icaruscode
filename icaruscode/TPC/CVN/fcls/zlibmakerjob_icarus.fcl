#include "services_common_icarus.fcl"
#include "channelmapping_icarus.fcl"

#include "correctionservices_icarus.fcl"
#include "seedservice.fcl"
#include "particleinventoryservice.fcl"
#include "backtrackerservice.fcl"
#include "photonbacktrackerservice.fcl"
#include "mccheatermodules.fcl"

#include "rootoutput_icarus.fcl"

#include "CVNMapperICARUS.fcl"

process_name: ZlibMakerICARUS

services:
{

  # Load the service that manages root files for histograms.
  TFileService: { fileName: "zlibmaker_r%r_s%s_hist.root"
                  closeFileFast: false }

  RandomNumberGenerator:     {}                                 # required by fuzzyCluster
  RandomNumberGenerator:     {}
  MemoryTracker:             {} # default is one

  FileCatalogMetadata:       @local::art_file_catalog_mc
                             @table::icarus_detsim_services
  ParticleInventoryService:  @local::standard_particleinventoryservice
  BackTrackerService:        @local::standard_backtrackerservice
}

source:
{
  module_type: RootInput
  maxEvents:  -1
}


physics:
{
 producers:{}
 
 filters:  {} 
 
 analyzers:{
    zlib:@local::standard_cvnzlibmaker
 }
 
 ana:       [ zlib ]
 end_paths: [ ana ] 
}

outputs:{}
services.BackTrackerService.BackTracker.SimChannelModuleLabel: "simdrift"
