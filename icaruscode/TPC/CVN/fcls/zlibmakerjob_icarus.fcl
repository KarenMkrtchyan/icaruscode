#include "channelmapping_icarus.fcl"
#include "correctionservices_icarus.fcl"
#include "geometry_icarus.fcl"
#include "services_common_icarus.fcl"
#include "services_icarus_simulation.fcl"

#include "seedservice.fcl"
#include "particleinventoryservice.fcl"
#include "backtrackerservice.fcl"
#include "photonbacktrackerservice.fcl"
#include "mccheatermodules.fcl"

#include "rootoutput_icarus.fcl"

#include "CVNMapperICARUS.fcl"

process_name: ZLIBMAKERICARUS

services:
{

  # Load the service that manages root files for histograms.
  # TFileService: { fileName: "zlibmaker_r%r_s%s_hist.root" closeFileFast: false }

  RandomNumberGenerator:     {}                                 # required by fuzzyCluster
  RandomNumberGenerator:     {}
  MemoryTracker:             {} # default is one

  FileCatalogMetadata:       @local::art_file_catalog_mc
  ParticleInventoryService:  @local::standard_particleinventoryservice
  BackTrackerService:        @local::standard_backtrackerservice
  
  @table::icarus_geometry_services
  @table::icarus_detsim_services
  #@table::icarus_geometry_services_legacy_icarus_v3
}

source:
{
  module_type: RootInput
  maxEvents:  -1
}


physics:
{
 producers:{
    cvnmapicarus: @local::standard_cvnmapper
    }

 filters:  {} 
 
 analyzers:{
    zlibicarus: @local::standard_cvnzlibmaker
    }
 
 map:       [ cvnmapicarus ]
 ana:       [ zlibicarus ]
 end_paths: [ ana ] 
}

outputs:{}
services.BackTrackerService.BackTracker.SimChannelModuleLabel: "simdrift"
